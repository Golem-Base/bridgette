// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package webui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"time"
)

// Helper function to prefix URLs with pathPrefix
func prefixURL(pathPrefix, url string) string {
	if pathPrefix == "" {
		return url
	}
	// Ensure pathPrefix starts with / but doesn't end with /
	prefix := pathPrefix
	if prefix[0] != '/' {
		prefix = "/" + prefix
	}
	if prefix[len(prefix)-1] == '/' {
		prefix = prefix[:len(prefix)-1]
	}
	return prefix + url
}

func Layout(title string, pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 30, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - Golem Bridge Monitor</title><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/htmx.min.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 31, Col: 64}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"></script><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/morphdom.min.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 32, Col: 68}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"></script><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/morphdom-swap.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 33, Col: 69}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"></script><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/tailwind.min.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 34, Col: 68}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\"></script><style>\n\t\t\t\t* {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 0;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t}\n\n\t\t\t\t:root {\n\t\t\t\t\t--arkiv-blue: #181EA9;\n\t\t\t\t\t--arkiv-orange: #FE7445;\n\t\t\t\t\t--black: #1F1F1F;\n\t\t\t\t\t--white: #FFFFFF;\n\t\t\t\t\t--gray-light: #F1F1F1;\n\t\t\t\t\t--gray-neutral: #ACACAC;\n\t\t\t\t}\n\n\t\t\t\tbody {\n\t\t\t\t\tfont-family: 'Courier New', monospace;\n\t\t\t\t\tcolor: var(--black);\n\t\t\t\t\tline-height: 1.6;\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t}\n\n\t\t\t\th1, h2, h3 {\n\t\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif !important;\n\t\t\t\t\tfont-weight: 900 !important;\n\t\t\t\t\ttext-transform: uppercase !important;\n\t\t\t\t\tletter-spacing: -0.02em !important;\n\t\t\t\t}\n\n\t\t\t\theader h1 {\n\t\t\t\t\tfont-size: 80px !important;\n\t\t\t\t\tline-height: 80px !important;\n\t\t\t\t\tmargin-bottom: 1.5rem !important;\n\t\t\t\t\tcolor: var(--black) !important;\n\t\t\t\t\tletter-spacing: -0.02em !important;\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t.container {\n\t\t\t\t\tmax-width: 1280px;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\tpadding: 0 60px;\n\t\t\t\t}\n\n\t\t\t\t@media (max-width: 768px) {\n\t\t\t\t\t.container {\n\t\t\t\t\t\tpadding: 0 1rem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t/* Header */\n\t\t\t\theader {\n\t\t\t\t\tpadding: 64px 0;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t}\n\n\t\t\t\t.logo {\n\t\t\t\t\tfont-size: 14px !important;\n\t\t\t\t\tfont-weight: 600 !important;\n\t\t\t\t\tletter-spacing: 0.1em !important;\n\t\t\t\t\tcolor: var(--arkiv-blue) !important;\n\t\t\t\t\tmargin-bottom: 2rem !important;\n\t\t\t\t}\n\n\t\t\t\t.subtitle {\n\t\t\t\t\tfont-size: 16px !important;\n\t\t\t\t\tcolor: var(--gray-neutral) !important;\n\t\t\t\t\tfont-weight: 400 !important;\n\t\t\t\t\tmargin-bottom: 2rem !important;\n\t\t\t\t}\n\n\t\t\t\t.status-badge {\n\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tgap: 8px;\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t\tborder: 2px solid var(--arkiv-orange);\n\t\t\t\t\tcolor: var(--arkiv-orange);\n\t\t\t\t\tpadding: 8px 20px;\n\t\t\t\t\tborder-radius: 24px;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tfont-weight: 700;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tletter-spacing: 0.05em;\n\t\t\t\t}\n\n\t\t\t\t.status-dot {\n\t\t\t\t\twidth: 8px;\n\t\t\t\t\theight: 8px;\n\t\t\t\t\tbackground: var(--arkiv-orange);\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tanimation: pulse 2s infinite;\n\t\t\t\t}\n\n\t\t\t\t@keyframes pulse {\n\t\t\t\t\t0%, 100% { opacity: 1; }\n\t\t\t\t\t50% { opacity: 0.4; }\n\t\t\t\t}\n\n\t\t\t\t/* Section */\n\t\t\t\tsection {\n\t\t\t\t\tpadding: 64px 0;\n\t\t\t\t}\n\n\t\t\t\tsection:nth-child(even) {\n\t\t\t\t\tbackground: var(--gray-light);\n\t\t\t\t}\n\n\t\t\t\t.section-title {\n\t\t\t\t\tfont-size: clamp(32px, 5vw, 48px);\n\t\t\t\t\tmargin-bottom: 48px;\n\t\t\t\t\tcolor: var(--black);\n\t\t\t\t}\n\n\t\t\t\t.section-title::before {\n\t\t\t\t\tcontent: \"[ \";\n\t\t\t\t\tcolor: var(--arkiv-orange);\n\t\t\t\t}\n\n\t\t\t\t.section-title::after {\n\t\t\t\t\tcontent: \" ]\";\n\t\t\t\t\tcolor: var(--arkiv-orange);\n\t\t\t\t}\n\n\t\t\t\t/* Cards */\n\t\t\t\t.card-grid {\n\t\t\t\t\tdisplay: grid;\n\t\t\t\t\tgrid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n\t\t\t\t\tgap: 32px;\n\t\t\t\t}\n\n\t\t\t\t.card {\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t\tpadding: 32px;\n\t\t\t\t\tborder-radius: 24px;\n\t\t\t\t\tbox-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n\t\t\t\t\ttransition: transform 0.3s, box-shadow 0.3s;\n\t\t\t\t}\n\n\t\t\t\t.card:hover {\n\t\t\t\t\ttransform: translateY(-4px);\n\t\t\t\t\tbox-shadow: 0 8px 32px rgba(24, 30, 169, 0.12);\n\t\t\t\t}\n\n\t\t\t\t.card-label {\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tcolor: var(--gray-neutral);\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tletter-spacing: 0.05em;\n\t\t\t\t\tmargin-bottom: 8px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t}\n\n\t\t\t\t.card-value {\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tcolor: var(--black);\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tword-break: break-all;\n\t\t\t\t}\n\n\t\t\t\t.metric-card {\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t\tpadding: 32px;\n\t\t\t\t\tborder-radius: 24px;\n\t\t\t\t\tbox-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n\t\t\t\t\ttransition: transform 0.3s, box-shadow 0.3s;\n\t\t\t\t}\n\n\t\t\t\t.metric-card:hover {\n\t\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t\tbox-shadow: 0 8px 32px rgba(24, 30, 169, 0.12);\n\t\t\t\t}\n\n\t\t\t\t.metric-label {\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tcolor: var(--gray-neutral);\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tletter-spacing: 0.05em;\n\t\t\t\t\tmargin-bottom: 12px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t}\n\n\t\t\t\t.metric-value {\n\t\t\t\t\tfont-size: 2rem;\n\t\t\t\t\tfont-weight: 900;\n\t\t\t\t\tcolor: var(--black);\n\t\t\t\t}\n\n\t\t\t\t.golem-card {\n\t\t\t\t\tbackground: var(--white);\n\t\t\t\t\tpadding: 32px;\n\t\t\t\t\tborder-radius: 24px;\n\t\t\t\t\tbox-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n\t\t\t\t\tmargin-bottom: 24px;\n\t\t\t\t}\n\n\t\t\t\t.golem-button {\n\t\t\t\t\tpadding: 12px 24px;\n\t\t\t\t\tbackground: var(--arkiv-blue);\n\t\t\t\t\tcolor: var(--white);\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: 24px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tfont-weight: 700;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\ttransition: all 0.3s;\n\t\t\t\t\tfont-family: 'Courier New', monospace;\n\t\t\t\t}\n\n\t\t\t\t.golem-button:hover {\n\t\t\t\t\tbackground: var(--arkiv-orange);\n\t\t\t\t\ttransform: scale(1.05);\n\t\t\t\t}\n\n\t\t\t\t.timeline-container {\n\t\t\t\t\tmargin-left: 0;\n\t\t\t\t}\n\n\t\t\t\t.timeline-item {\n\t\t\t\t\tmargin-bottom: 24px;\n\t\t\t\t}\n\n\t\t\t\t/* Footer */\n\t\t\t\tfooter {\n\t\t\t\t\tbackground: var(--black);\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tpadding: 64px 0;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\n\t\t\t\t.footer-logo {\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\tletter-spacing: 0.1em;\n\t\t\t\t\tmargin-bottom: 16px;\n\t\t\t\t\tcolor: var(--arkiv-orange);\n\t\t\t\t}\n\n\t\t\t\tfooter p {\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\topacity: 0.7;\n\t\t\t\t}\n\n\t\t\t\tfooter a {\n\t\t\t\t\tcolor: var(--arkiv-orange);\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t\ttransition: opacity 0.3s;\n\t\t\t\t}\n\n\t\t\t\tfooter a:hover {\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\n\t\t\t\t/* Responsive */\n\t\t\t\t@media (max-width: 768px) {\n\t\t\t\t\th1 {\n\t\t\t\t\t\tfont-size: 36px;\n\t\t\t\t\t}\n\n\t\t\t\t\t.section-title {\n\t\t\t\t\t\tfont-size: 28px;\n\t\t\t\t\t}\n\n\t\t\t\t\tsection {\n\t\t\t\t\t\tpadding: 48px 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Status colors */\n\t\t\t\t.text-amber-600, .text-amber-400, .text-amber-300 {\n\t\t\t\t\tcolor: var(--arkiv-orange) !important;\n\t\t\t\t}\n\n\t\t\t\t.border-amber-500, .border-amber-400 {\n\t\t\t\t\tborder-color: var(--arkiv-orange) !important;\n\t\t\t\t}\n\n\t\t\t\t.bg-amber-500\\/20 {\n\t\t\t\t\tbackground: rgba(254, 116, 69, 0.1) !important;\n\t\t\t\t}\n\n\t\t\t\t.text-green-300, .text-green-400 {\n\t\t\t\t\tcolor: #10b981 !important;\n\t\t\t\t}\n\n\t\t\t\t.bg-green-500\\/20 {\n\t\t\t\t\tbackground: rgba(16, 185, 129, 0.1) !important;\n\t\t\t\t}\n\n\t\t\t\t.border-green-400 {\n\t\t\t\t\tborder-color: #10b981 !important;\n\t\t\t\t}\n\n\t\t\t\t.text-blue-400 {\n\t\t\t\t\tcolor: var(--arkiv-blue) !important;\n\t\t\t\t}\n\n\t\t\t\t.text-gray-500, .text-gray-600 {\n\t\t\t\t\tcolor: var(--gray-neutral) !important;\n\t\t\t\t}\n\n\t\t\t\t.border-l-4 {\n\t\t\t\t\tborder-left: 4px solid var(--arkiv-orange) !important;\n\t\t\t\t}\n\t\t\t</style></head><body hx-ext=\"morphdom-swap\"><header><div class=\"container\"><div class=\"logo\">[ ARKIV ]</div><h1>ARKIV BRIDGE</h1><p class=\"subtitle\">Cross-chain Transaction Tracking</p></div></header><main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</main><footer><div class=\"container\"><div class=\"footer-logo\">[ ARKIV ]</div><p>Powered by <a href=\"https://www.golem.network/\" target=\"_blank\">Golem Network</a></p><p style=\"margin-top: 8px;\">© ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(time.Now().Year())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 363, Col: 55}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " Arkiv. All rights reserved.</p></div></footer></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Dashboard is the main page template
func Dashboard(pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var8 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var8 == nil {
			templ_7745c5c3_Var8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var9 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<section><div class=\"container\"><div id=\"dashboard-metrics\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/metrics"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 375, Col: 84}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" hx-trigger=\"load\"></div></div></section><section><div class=\"container\"><div id=\"bridge-performance\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/performance"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 380, Col: 89}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" hx-trigger=\"load\"></div></div></section><section><div class=\"container\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = TimeSeriesChart(pathPrefix).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</div></section><section><div class=\"container\"><div id=\"unmatched-deposits-section\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/unmatched"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 390, Col: 95}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\" hx-trigger=\"load\"></div></div></section><section><div class=\"container\"><div id=\"deposits-timeline-section\" hx-get=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/timeline"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 395, Col: 93}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "\" hx-trigger=\"load\"></div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("Dashboard", pathPrefix).Render(templ.WithChildren(ctx, templ_7745c5c3_Var9), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// DashboardMetrics contains the metrics cards
func DashboardMetrics(stats map[string]interface{}, pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var14 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var14 == nil {
			templ_7745c5c3_Var14 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div hx-get=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var15 string
		templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/metrics"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 403, Col: 58}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\" hx-trigger=\"every 2s\" hx-swap=\"morphdom\" hx-swap=\"outerHTML\"><h2 class=\"section-title\">Network Metrics</h2><div class=\"card-grid\" style=\"margin-bottom: 32px;\"><div class=\"metric-card\"><div class=\"metric-label\">Total Matched Deposits</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var16 string
		templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", stats["total_matched"].(int)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 408, Col: 79}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "</div></div><div class=\"metric-card\"><div class=\"metric-label\">Average Confirmation Time</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var17 string
		templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["avg_time_diff"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 412, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</div></div><div class=\"metric-card\"><div class=\"metric-label\">Total Bridged ETH</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var18 string
		templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.4f ETH", stats["total_bridged_eth"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 416, Col: 93}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div></div></div><div class=\"card-grid\"><div class=\"metric-card\" style=\"border: 2px solid var(--arkiv-orange);\"><div class=\"metric-label\" style=\"color: var(--arkiv-orange);\">Unmatched Deposits</div><div class=\"metric-value\" style=\"color: var(--arkiv-orange);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var19 string
		templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", stats["pending_deposits"].(int)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 422, Col: 118}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "</div></div><div class=\"metric-card\"><div class=\"metric-label\" style=\"margin-bottom: 16px;\">Latest L1 Block</div><div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 16px;\"><div><div style=\"font-size: 10px; color: var(--gray-neutral); text-transform: uppercase; margin-bottom: 4px;\">Block Number</div><div style=\"font-size: 1.125rem; font-weight: 700; color: var(--black);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var20 string
		templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", stats["latest_l1_block"].(int)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 429, Col: 130}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "</div></div><div><div style=\"font-size: 10px; color: var(--gray-neutral); text-transform: uppercase; margin-bottom: 4px;\">Time Since</div><div style=\"font-size: 1.125rem; font-weight: 700; color: var(--black);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["l1_time_since"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 433, Col: 138}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div></div></div></div><div class=\"metric-card\"><div class=\"metric-label\" style=\"margin-bottom: 16px;\">Latest L2 Block</div><div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 16px;\"><div><div style=\"font-size: 10px; color: var(--gray-neutral); text-transform: uppercase; margin-bottom: 4px;\">Block Number</div><div style=\"font-size: 1.125rem; font-weight: 700; color: var(--black);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var22 string
		templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", stats["latest_l2_block"].(int)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 442, Col: 130}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "</div></div><div><div style=\"font-size: 10px; color: var(--gray-neutral); text-transform: uppercase; margin-bottom: 4px;\">Time Since</div><div style=\"font-size: 1.125rem; font-weight: 700; color: var(--black);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var23 string
		templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["l2_time_since"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 446, Col: 138}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "</div></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// BridgePerformance contains the bridge performance stats
func BridgePerformance(stats map[string]interface{}, pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var24 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var24 == nil {
			templ_7745c5c3_Var24 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "<div hx-get=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var25 string
		templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/dashboard/performance"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 456, Col: 62}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\" hx-trigger=\"every 3s\" hx-swap=\"morphdom\" hx-swap=\"outerHTML\"><h2 class=\"section-title\">Bridge Performance</h2><div class=\"card-grid\"><div class=\"metric-card\"><div class=\"metric-label\">Minimum Time</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var26 string
		templ_7745c5c3_Var26, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["min_time_diff"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 461, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var26))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "</div></div><div class=\"metric-card\"><div class=\"metric-label\">Average Time</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var27 string
		templ_7745c5c3_Var27, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["avg_time_diff"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 465, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var27))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "</div></div><div class=\"metric-card\"><div class=\"metric-label\">Maximum Time</div><div class=\"metric-value\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var28 string
		templ_7745c5c3_Var28, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.1f sec", stats["max_time_diff"].(float64)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 469, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var28))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "</div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// UnmatchedDepositsSection contains the unmatched deposits section
func UnmatchedDepositsSection(deposits []UnmatchedDeposit, page, totalPages int, pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var29 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var29 == nil {
			templ_7745c5c3_Var29 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "<div hx-get=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var30 string
		templ_7745c5c3_Var30, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/unmatched?page=%d", page)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 477, Col: 87}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var30))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "\" hx-trigger=\"every 2s\" hx-swap=\"morphdom\" hx-swap=\"outerHTML\"><h2 class=\"section-title\">Unmatched Deposits</h2><p style=\"font-size: 14px; color: var(--gray-neutral); margin-bottom: 32px;\">Deposits waiting for L2 confirmation</p><div class=\"timeline-container\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(deposits) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "<p style=\"text-align: center; padding: 3rem 0; color: var(--gray-neutral);\">No unmatched deposits found</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			for _, deposit := range deposits {
				templ_7745c5c3_Err = UnmatchedDepositItem(deposit).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if totalPages > 1 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "<div style=\"display: flex; justify-content: space-between; align-items: center; margin-top: 32px;\"><div><span style=\"font-size: 14px; color: var(--gray-neutral);\">Page ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var31 string
			templ_7745c5c3_Var31, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d of %d", page, totalPages))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 492, Col: 112}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var31))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "</span></div><div style=\"display: flex; gap: 12px;\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if page > 1 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "<button class=\"golem-button\" hx-get=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var32 string
				templ_7745c5c3_Var32, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/unmatched?page=%d", page-1)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 498, Col: 90}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var32))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "\" hx-target=\"closest div\" hx-swap=\"morphdom\">Previous</button> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if page < totalPages {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, "<button class=\"golem-button\" hx-get=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var33 string
				templ_7745c5c3_Var33, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/unmatched?page=%d", page+1)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 508, Col: 90}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var33))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "\" hx-target=\"closest div\" hx-swap=\"morphdom\">Next</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, "</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// DepositsTimelineSection contains the deposits timeline section
func DepositsTimelineSection(deposits []DepositPair, page, totalPages int, pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var34 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var34 == nil {
			templ_7745c5c3_Var34 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "<div hx-get=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var35 string
		templ_7745c5c3_Var35, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/timeline?page=%d", page)))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 523, Col: 86}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var35))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "\" hx-trigger=\"every 5s\" hx-swap=\"morphdom\" hx-swap=\"outerHTML\"><h2 class=\"section-title\">Deposit Timeline</h2><div class=\"timeline-container\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(deposits) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "<p style=\"text-align: center; padding: 3rem 0; color: var(--gray-neutral);\">No deposits found</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			for _, deposit := range deposits {
				templ_7745c5c3_Err = DepositItem(deposit).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if totalPages > 1 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "<div style=\"display: flex; justify-content: space-between; align-items: center; margin-top: 32px;\"><div><span style=\"font-size: 14px; color: var(--gray-neutral);\">Page ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var36 string
			templ_7745c5c3_Var36, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d of %d", page, totalPages))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 537, Col: 112}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var36))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "</span></div><div style=\"display: flex; gap: 12px;\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if page > 1 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "<button class=\"golem-button\" hx-get=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var37 string
				templ_7745c5c3_Var37, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/timeline?page=%d", page-1)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 543, Col: 89}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var37))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "\" hx-target=\"closest div\" hx-swap=\"morphdom\">Previous</button> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if page < totalPages {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, "<button class=\"golem-button\" hx-get=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var38 string
				templ_7745c5c3_Var38, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, fmt.Sprintf("/dashboard/timeline?page=%d", page+1)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 553, Col: 89}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var38))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, "\" hx-target=\"closest div\" hx-swap=\"morphdom\">Next</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// UnmatchedDepositItem displays a single unmatched deposit
func UnmatchedDepositItem(deposit UnmatchedDeposit) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var39 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var39 == nil {
			templ_7745c5c3_Var39 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "<div class=\"golem-card\" style=\"border-left: 4px solid var(--arkiv-orange);\"><div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 24px;\"><div><h3 style=\"font-size: 1.25rem; font-weight: 700; color: var(--black); margin-bottom: 8px;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var40 string
		templ_7745c5c3_Var40, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.4f ETH", deposit.Amount))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 571, Col: 136}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var40))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "</h3><p style=\"font-size: 14px; color: var(--gray-neutral); margin-bottom: 4px;\">From: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var41 string
		templ_7745c5c3_Var41, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.FromAddress))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 572, Col: 123}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var41))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "</p><p style=\"font-size: 14px; color: var(--gray-neutral);\">To: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var42 string
		templ_7745c5c3_Var42, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.ToAddress))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 573, Col: 99}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var42))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, "</p></div><div style=\"padding: 8px 16px; border-radius: 24px; background: rgba(254, 116, 69, 0.1); border: 1px solid var(--arkiv-orange); color: var(--arkiv-orange); font-size: 12px; font-weight: 700; text-transform: uppercase;\">Waiting: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var43 string
		templ_7745c5c3_Var43, templ_7745c5c3_Err = templ.JoinStringErrs(formatTimeDiff(deposit.TimeSinceSeconds))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 576, Col: 55}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var43))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "</div></div><div><h4 style=\"font-size: 10px; font-weight: 600; color: var(--gray-neutral); text-transform: uppercase; letter-spacing: 0.05em; margin-bottom: 12px;\">L1 Deposit</h4><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Block: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var44 string
		templ_7745c5c3_Var44, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", deposit.L1BlockNumber))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 581, Col: 121}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var44))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, "</p><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Time: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var45 string
		templ_7745c5c3_Var45, templ_7745c5c3_Err = templ.JoinStringErrs(formatTime(deposit.L1Timestamp))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 582, Col: 111}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var45))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "</p><p style=\"font-size: 14px; color: var(--arkiv-blue); word-break: break-all;\">Tx: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var46 string
		templ_7745c5c3_Var46, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.TxHashL1))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 583, Col: 118}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var46))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "</p></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// DepositItem displays a single deposit
func DepositItem(deposit DepositPair) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var47 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var47 == nil {
			templ_7745c5c3_Var47 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "<div class=\"golem-card\"><div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 24px;\"><div><h3 style=\"font-size: 1.25rem; font-weight: 700; color: var(--black); margin-bottom: 8px;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var48 string
		templ_7745c5c3_Var48, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%.4f ETH", deposit.Amount))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 593, Col: 136}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var48))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, "</h3><p style=\"font-size: 14px; color: var(--gray-neutral); margin-bottom: 4px;\">From: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var49 string
		templ_7745c5c3_Var49, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.FromAddress))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 594, Col: 123}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var49))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 64, "</p><p style=\"font-size: 14px; color: var(--gray-neutral);\">To: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var50 string
		templ_7745c5c3_Var50, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.ToAddress))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 595, Col: 99}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var50))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 65, "</p></div><div style=\"padding: 8px 16px; border-radius: 24px; background: rgba(16, 185, 129, 0.1); border: 1px solid #10b981; color: #10b981; font-size: 12px; font-weight: 700; text-transform: uppercase;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var51 string
		templ_7745c5c3_Var51, templ_7745c5c3_Err = templ.JoinStringErrs(formatTimeDiff(deposit.TimeDiffSeconds))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 598, Col: 45}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var51))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 66, "</div></div><div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 24px;\"><div><h4 style=\"font-size: 10px; font-weight: 600; color: var(--gray-neutral); text-transform: uppercase; letter-spacing: 0.05em; margin-bottom: 12px;\">L1 Deposit</h4><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Block: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var52 string
		templ_7745c5c3_Var52, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", deposit.L1BlockNumber))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 604, Col: 122}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var52))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 67, "</p><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Time: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var53 string
		templ_7745c5c3_Var53, templ_7745c5c3_Err = templ.JoinStringErrs(formatTime(deposit.L1Timestamp))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 605, Col: 112}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var53))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 68, "</p><p style=\"font-size: 14px; color: var(--arkiv-blue); word-break: break-all;\">Tx: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var54 string
		templ_7745c5c3_Var54, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.TxHashL1))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 606, Col: 119}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var54))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 69, "</p></div><div><h4 style=\"font-size: 10px; font-weight: 600; color: var(--gray-neutral); text-transform: uppercase; letter-spacing: 0.05em; margin-bottom: 12px;\">L2 Confirmation</h4><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Block: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var55 string
		templ_7745c5c3_Var55, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", deposit.L2BlockNumber))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 610, Col: 122}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var55))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 70, "</p><p style=\"font-size: 14px; color: var(--black); margin-bottom: 4px;\">Time: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var56 string
		templ_7745c5c3_Var56, templ_7745c5c3_Err = templ.JoinStringErrs(formatTime(deposit.L2Timestamp))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 611, Col: 112}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var56))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 71, "</p><p style=\"font-size: 14px; color: var(--arkiv-blue); word-break: break-all;\">Tx: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var57 string
		templ_7745c5c3_Var57, templ_7745c5c3_Err = templ.JoinStringErrs(shortenAddress(deposit.TxHashL2))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 612, Col: 119}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var57))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 72, "</p></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// TimeSeriesChart displays a chart of deposit time differences over time
func TimeSeriesChart(pathPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var58 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var58 == nil {
			templ_7745c5c3_Var58 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 73, "<div hx-swap=\"morphdom\"><h2 class=\"section-title\">Deposit Confirmation Times</h2><div class=\"golem-card\"><div style=\"position: relative; height: 400px;\"><canvas id=\"timeSeriesChart\"></canvas></div><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var59 string
		templ_7745c5c3_Var59, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/chart.min.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 626, Col: 64}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var59))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 74, "\"></script><script src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var60 string
		templ_7745c5c3_Var60, templ_7745c5c3_Err = templ.JoinStringErrs(prefixURL(pathPrefix, "/static/js/chartjs-adapter-date-fns.min.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 627, Col: 83}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var60))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 75, "\"></script><script>\n\t\t\t// Chart instance to enable updates\n\t\t\tlet timeSeriesChart;\n\n\t\t\t// Initialize the chart once\n\t\t\tfunction initializeChart() {\n\t\t\t\tconst ctx = document.getElementById('timeSeriesChart');\n\t\t\t\ttimeSeriesChart = new Chart(ctx, {\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\tlabel: 'Confirmation Time (seconds)',\n\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(24, 30, 169, 0.1)',\n\t\t\t\t\t\t\tborderColor: '#181EA9',\n\t\t\t\t\t\t\tborderWidth: 3,\n\t\t\t\t\t\t\tpointStyle: 'circle',\n\t\t\t\t\t\t\tpointRadius: 4,\n\t\t\t\t\t\t\tpointBackgroundColor: '#181EA9',\n\t\t\t\t\t\t\tpointBorderColor: '#ffffff',\n\t\t\t\t\t\t\tpointBorderWidth: 2,\n\t\t\t\t\t\t\tpointHoverRadius: 6,\n\t\t\t\t\t\t\tpointHoverBackgroundColor: '#FE7445',\n\t\t\t\t\t\t\tpointHoverBorderColor: '#ffffff',\n\t\t\t\t\t\t\ttension: 0.05,\n\t\t\t\t\t\t\tfill: true\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\tplugins: {\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(31, 31, 31, 0.95)',\n\t\t\t\t\t\t\t\ttitleColor: '#ffffff',\n\t\t\t\t\t\t\t\tbodyColor: '#ffffff',\n\t\t\t\t\t\t\t\tborderColor: '#FE7445',\n\t\t\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\t\t\ttitle: function(context) {\n\t\t\t\t\t\t\t\t\t\t// Simply format the x value directly\n\t\t\t\t\t\t\t\t\t\tif (context[0].parsed.x) {\n\t\t\t\t\t\t\t\t\t\t\tconst date = new Date(context[0].parsed.x);\n\t\t\t\t\t\t\t\t\t\t\treturn date.toLocaleString();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\ty: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: 'Seconds',\n\t\t\t\t\t\t\t\t\tcolor: '#1F1F1F'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tcolor: '#1F1F1F'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(172, 172, 172, 0.2)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tx: {\n\t\t\t\t\t\t\t\ttype: 'time',\n\t\t\t\t\t\t\t\ttime: {\n\t\t\t\t\t\t\t\t\tunit: 'hour',\n\t\t\t\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\t\t\t\thour: 'MMM d, HH:mm'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttooltipFormat: 'MMM d, yyyy HH:mm'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: 'Date',\n\t\t\t\t\t\t\t\t\tcolor: '#1F1F1F'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tcolor: '#1F1F1F'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(172, 172, 172, 0.2)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Function to fetch data and update the chart\n\t\t\tfunction updateChart() {\n\t\t\t\tfetch('")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var61, templ_7745c5c3_Err := templruntime.ScriptContentInsideStringLiteral(prefixURL(pathPrefix, "/api/chart-data"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/webui/templates.templ`, Line: 727, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var61)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 76, "')\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t// Create dataset with proper timestamp objects\n\t\t\t\t\t\tconst dataset = data.map(point => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: new Date(point.timestamp),\n\t\t\t\t\t\t\t\ty: point.timeDiffSeconds\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Update chart data without destroying the chart\n\t\t\t\t\t\tif (timeSeriesChart) {\n\t\t\t\t\t\t\ttimeSeriesChart.data.datasets[0].data = dataset;\n\t\t\t\t\t\t\ttimeSeriesChart.update();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => console.error('Error fetching chart data:', error));\n\t\t\t}\n\n\t\t\t// Initialize chart once\n\t\t\tinitializeChart();\n\t\t\t\n\t\t\t// Initial data load\n\t\t\tupdateChart();\n\n\t\t\t// Refresh data every 10 seconds\n\t\t\tsetInterval(updateChart, 10000);\n\t\t</script></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
